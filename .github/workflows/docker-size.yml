name: 'üê≥ Docker size'

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - 'template/**'

permissions:
  pull-requests: write
  contents: write

jobs:
  calculate-base:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}
    outputs:
      image_size: ${{ steps.docker-base.outputs.image_size }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.base_ref }}
      - name: Get commit short hash
        id: commit
        run: |
          short=$(git rev-parse --short HEAD)
          echo "short=$short" >> "$GITHUB_OUTPUT"
      - name: üì¶ Cache docker image for commit ${{ steps.commit.outputs.short }}
        uses: actions/cache@v4
        with:
          path: base-docker-image.txt
          key: base-docker-image-os-${{ runner.os }}-commit-${{ steps.commit.outputs.short }}
      - name: üê≥ Calculate docker image size in ${{ github.base_ref }}
        id: docker-base
        run: |
          if [ -f base-docker-image.txt ]; then
            echo "Getting docker image from cache"
            image_size=$(<base-docker-image.txt)
          else
            echo "Docker image not available in the cache"
            docker build . -t service
            image_size=$(docker images service | awk 'NR==2 {print $NF}')
          fi
          echo "$image_size" > base-docker-image.txt
          echo "image_size=$image_size" >> "$GITHUB_OUTPUT"
  calculate-head:
    runs-on: ubuntu-latest
    outputs:
      image_size: ${{ steps.docker-head.outputs.image_size }}
      commit_short: ${{ steps.get-commit.outputs.short }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
      - name: Get commit short hash
        id: get-commit
        run: |
          short=$(git rev-parse --short HEAD)
          echo "short=$short" >> "$GITHUB_OUTPUT"
      - name: üê≥ Calculate docker image size in ${{ github.head_ref }}
        id: docker-head
        run: |
          docker build . -t service
          image_size=$(docker images service | awk 'NR==2 {print $NF}')
          echo "image_size=$image_size" >> "$GITHUB_OUTPUT"
  write-comment:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}
    needs: [calculate-base, calculate-head]
    steps:
      - uses: marocchino/sticky-pull-request-comment@v2
        env:
          BASE_DOCKER_IMAGE_SIZE: ${{needs.calculate-base.outputs.image_size}}
          HEAD_DOCKER_IMAGE_SIZE: ${{needs.calculate-head.outputs.image_size}}
        with:
          header: <docker-image-size>
          message: |
            ## üê≥ Docker Metrics üê≥

            * Size of the Docker Image in the base (${{ github.base_ref }}): **${{ env.BASE_DOCKER_IMAGE_SIZE }}**
            * Size of the Docker Image in this branch (${{ github.head_ref }}): **${{ env.HEAD_DOCKER_IMAGE_SIZE }}**
  update-wiki:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/heads/template/') }}
    needs: calculate-head
    steps:
      - name: Extract module name
        id: module-name
        run: |
          module=$(echo "${{ github.ref }}" | awk -F/ '{print $3}')
          echo "module=$module" >> "$GITHUB_OUTPUT"
      
      - name: Checkout wiki
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository }}.wiki
          path: wiki
      
      - name: Update wiki page
        run: |
          version="v$(date +'%Y.%m.%d')"
          page_path="wiki/Docker-Sizes-${{ steps.module-name.outputs.module }}.md"

          {
            echo "# Docker Image Size: ${{ steps.module-name.outputs.module }} ($version)"
            echo "## üê≥ Image Metrics"
            echo "**Branch**: ${{ github.ref_name }}"
            echo "**Commit**: [${{ needs.calculate-head.outputs.commit_short }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }})"
            echo "**Size**: ${{ needs.calculate-head.outputs.image_size }}"
            echo "**Last updated**: $(date)"
          } > "$page_path"
          
      - name: Commit to wiki
        run: |
          cd wiki
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add .
          git commit -m "Update docker size: ${{ steps.module-name.outputs.module }} (${{ needs.calculate-head.outputs.commit_short }})"
          git push