name: Dependency Analysis

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  pull-requests: write

jobs:
  analyze:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4

      - name: Setup Node ‚öôÔ∏è
        uses: ./.github/actions/setup-node

      - name: Install required tools
        run: |
          sudo apt-get update
          sudo apt-get install -y jq
          npm install -g depcheck

      - name: Run dependency analysis
        id: analysis
        run: |
          OUTPUT_FILE="analysis_output.txt"

          echo "üîç Analizando dependencias no utilizadas..." | tee -a $OUTPUT_FILE

          echo "" | tee -a $OUTPUT_FILE
          echo "üìä AN√ÅLISIS DE DEPENDENCIAS NO UTILIZADAS:" | tee -a $OUTPUT_FILE
          echo "==========================================" | tee -a $OUTPUT_FILE

          depcheck_output=$(depcheck --json)
          if command -v jq &> /dev/null; then
            echo "$depcheck_output" | jq -r '
              if .dependencies | length > 0 then
                "‚ùå DEPENDENCIAS NO USADAS:",
                (.dependencies[] | "  - " + .)
              else
                "‚úÖ Todas las dependencias est√°n siendo utilizadas"
              end,
              "",
              if .devDependencies | length > 0 then
                "‚ùå DEPENDENCIAS DE DESARROLLO NO USADAS:",
                (.devDependencies[] | "  - " + .)
              else
                "‚úÖ Todas las dependencias de desarrollo est√°n siendo utilizadas"
              end' | tee -a $OUTPUT_FILE
          else
            echo "‚ö†Ô∏è  jq no est√° instalado. Mostrando salida simplificada..." | tee -a $OUTPUT_FILE
            echo "Instala jq para ver un an√°lisis m√°s detallado: https://stedolan.github.io/jq/download/" | tee -a $OUTPUT_FILE
            echo "" | tee -a $OUTPUT_FILE
            depcheck | tee -a $OUTPUT_FILE
          fi

          echo "" | tee -a $OUTPUT_FILE
          echo "üßπ RECOMENDACIONES:" | tee -a $OUTPUT_FILE
          echo "==================" | tee -a $OUTPUT_FILE
          echo "1. Revisa las dependencias marcadas como no utilizadas" | tee -a $OUTPUT_FILE
          echo "2. Mueve dependencias de build a devDependencies" | tee -a $OUTPUT_FILE
          echo "3. Considera alternativas m√°s ligeras para paquetes pesados" | tee -a $OUTPUT_FILE
          echo "4. Usa pnpm prune regularmente" | tee -a $OUTPUT_FILE

          # Guardar contenido para el comentario
          echo "ANALYSIS_OUTPUT<<EOF" >> $GITHUB_ENV
          cat $OUTPUT_FILE >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Create sticky comment
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: dependency-analysis
          message: |
            ${{ env.ANALYSIS_OUTPUT }}
